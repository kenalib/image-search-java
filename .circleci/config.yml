# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test

  deploy:
    machine: true
    environment:
      DOCKER_TLS_VERIFY: "1"
      DOCKER_HOST: "tcp://47.74.213.82:2376"
      DOCKER_CERT_PATH: "~/.docker/machine/machines/image-search-webapp"
      DOCKER_MACHINE_NAME: "image-search-webapp"
    steps:
      - checkout
      - run:
        name: setup docker-machine
        command: |
          set -x
          mkdir -p ~/.docker/machine/machines/image-search-webapp
          echo $DOCKER_CA_PEM | sed -e 's/\s\+/\n/g' \
            > ~/.docker/machine/machines/image-search-webapp/ca.pem
      - run:
        name: docker-compose up -d --build
        command: docker-compose up -d --build

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
        requires:
          - build
        filters:
          branches:
            only: master
